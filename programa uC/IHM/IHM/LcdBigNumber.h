void BigNumberInit()
{
	especial_char(0,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111,0b00000000,0b00000000,0b00000000);
	especial_char(1,0b00000000,0b00000000,0b00011111,0b00011111,0b00011111,0b00011111,0b00000000,0b00000000);
	especial_char(2,0b00000000,0b00000000,0b00000000,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111);
	especial_char(3,0b00000000,0b00000000,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111);
	especial_char(4,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111,0b00011111,0b00000000,0b00000000);
	especial_char(5,0b00000000,0b00000000,0b00000000,0b00000000,0b00001110,0b00001110,0b00001110,0b00001110);
}

void BigDigit(unsigned char n, unsigned char x, unsigned char y)
{
	char l1[3];
	char l2[3];
	char l3[3];
	
	if(n==0)
	{
		l1[0]=255;
		l1[1]=0;
		l1[2]=255;
		l2[0]=255;
		l2[1]=32;
		l2[2]=255;
		l3[0]=255;
		l3[1]=2;
		l3[2]=255;
	}
	if(n==1)
	{
		l1[0]=32;
		l1[1]=32;
		l1[2]=255;
		l2[0]=32;
		l2[1]=32;
		l2[2]=255;
		l3[0]=32;
		l3[1]=32;
		l3[2]=255;
	}
	
	if(n==2)
	{
		l1[0]=0;
		l1[1]=0;
		l1[2]=255;
		l2[0]=3;
		l2[1]=1;
		l2[2]=4;
		l3[0]=255;
		l3[1]=2;
		l3[2]=2;
		
	}
	if(n==3)
	{
		l1[0]=0;
		l1[1]=0;
		l1[2]=255;
		l2[0]=1;
		l2[1]=1;
		l2[2]=255;
		l3[0]=2;
		l3[1]=2;
		l3[2]=255;
	}
	if(n==4)
	{
		l1[0]=255;
		l1[1]=32;
		l1[2]=255;
		l2[0]=4;
		l2[1]=1;
		l2[2]=255;
		l3[0]=32;
		l3[1]=32;
		l3[2]=255;
	}
	if(n==5)
	{
		l1[0]=255;
		l1[1]=0;
		l1[2]=0;
		l2[0]=4;
		l2[1]=1;
		l2[2]=3;
		l3[0]=2;
		l3[1]=2;
		l3[2]=255;
	}
	if(n==6)
	{
		l1[0]=255;
		l1[1]=0;
		l1[2]=0;
		l2[0]=255;
		l2[1]=1;
		l2[2]=3;
		l3[0]=255;
		l3[1]=2;
		l3[2]=255;
	}
	if(n==7)
	{
		l1[0]=0;
		l1[1]=0;
		l1[2]=255;
		l2[0]=32;
		l2[1]=32;
		l2[2]=255;
		l3[0]=32;
		l3[1]=32;
		l3[2]=255;
	}
	if(n==8)
	{
		l1[0]=255;
		l1[1]=0;
		l1[2]=255;
		l2[0]=255;
		l2[1]=1;
		l2[2]=255;
		l3[0]=255;
		l3[1]=2;
		l3[2]=255;
	}
	if(n==9)
	{
		l1[0]=255;
		l1[1]=0;
		l1[2]=255;
		l2[0]=4;
		l2[1]=1;
		l2[2]=255;
		l3[0]=2;
		l3[1]=2;
		l3[2]=255;
	}
	gotoxy(x,y);
	LCD_putchar(l1[0]);
	LCD_putchar(l1[1]);
	LCD_putchar(l1[2]);
	gotoxy(x,y+1);
	LCD_putchar(l2[0]);
	LCD_putchar(l2[1]);
	LCD_putchar(l2[2]);
	gotoxy(x,y+2);
	LCD_putchar(l3[0]);
	LCD_putchar(l3[1]);
	LCD_putchar(l3[2]);
}

void BigNumber(unsigned char n, unsigned char x, unsigned char y)
{
	if(n>9)
	{
		BigDigit((n%100)/10,x,y);
	}
	else
	{
		BigDigit(0,x,y);
	}
	
	BigDigit(n%10,x+4,y);
}

void BigNumberDecimal(unsigned int n, unsigned char x, unsigned char y)
{
	if(n>90)
	{
		BigDigit((n%1000)/100,x,y);
	}
	else
	{
		BigDigit(0,x,y);
	}
	
	if(n>9)
	{
		BigDigit((n%100)/10,x+4,y);
	}
	else
	{
		BigDigit(0,x+4,y);
	}
	
	//gotoxy(x+8,y+2);
	gotoxy(x+7,y+2);
	//LCD_putchar(2);
	LCD_putchar(5);
	//BigDigit(n%10,x+10,y);
	BigDigit(n%10,x+8,y);
}

